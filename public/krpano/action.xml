<krpano>
    <action name="getUrl" type="javascript">
        var spotId=krpano.spot_id;
        var hlookat=krpano.view.hlookat;
        var vlookat=krpano.view.vlookat;
        var canvasId=caller.canvas_id;
        urlStr="/editor?spotId="+spotId+"&#38;canvasId="+canvasId+"&#38;hlookat="+hlookat+"&#38;vlookat="+vlookat;
        window.location.href = urlStr;
    </action>

    <action name="set_tool" type="javascript">
        if(krpano.tipCoin == 0){
            var fontScale=caller.scale;
            krpano.layer.getItem('tooltip_text').html=caller.name;
            krpano.layer.getItem('tooltip_text').visible=true;
            krpano.layer.getItem('tooltip_text').css="font-family:Arial; font-size:20px; color:#ffffff;"
            var x1;
            var y1;
            var coord=krpano.spheretoscreen(caller.ath,caller.atv);
            krpano.layer.getItem('tooltip_text').x=coord.x;
            krpano.layer.getItem('tooltip_text').y=coord.y-10;
            krpano.tipCoin=1;
        } else {
            krpano.layer.getItem('tooltip_text').visible=false;
            krpano.layer.getItem('tooltip_text').html="";
            krpano.tipCoin=0;
        }
    </action>

    <action name="initiate" scope="global" type="javascript">
        krpano.tipCoin=0;
        krpano.addlayer("tooltip_text");
        krpano.layer.getItem('tooltip_text').type="text";
        krpano.layer.getItem('tooltip_text').edge="bottom";
        krpano.layer.getItem('tooltip_text').x=0;
        krpano.layer.getItem('tooltip_text').y=0;
        krpano.layer.getItem('tooltip_text').html="";
        krpano.layer.getItem('tooltip_text').visible=false;
        krpano.layer.getItem('tooltip_text').css="font-family:Arial; font-size:50px; color:#ffffff;";
        krpano.layer.getItem('tooltip_text').bgalpha="0";

        var spots = krpano.hotspot.getArray();

        spots.forEach(function(spot){
            if(spot.hotspot_type == "navigation"){
                spot.onover="set_tool";
                spot.onout="set_tool";
            }
        });
    </action>


    <action name="setupSurface" type="javascript">
        <!--
        The function in onloaded event is to load the image on the image.
        However, krpano will fire onloaded event when a new image is load.
        So the coin is like a flag.
        Coin=0 is the initial states.
        The first time onloaded event is fired, coin= 1 and the function will know
         it’s duplicated onloaded event, so it won’t execute it.
        -->

        var coin = caller.coin;

        let surface = args[1];

        if(coin == "0"){
            if (surface == 'main' || surface == 'live'){
                var scale_shared = caller.scale;
                var main_w = caller.main_w;
                var main_h = caller.main_h;
                var shared_w = caller.shared_w;
                var shared_h = caller.shared_h;
                var select = caller.select;
                var scale_main;
                if (select === "w") {
                    scale_main=scale_shared*(shared_w/main_w);
                } else {
                    scale_main=scale_shared*(shared_h/main_h);
                }
                caller.ox=parseFloat(caller.ox)+parseFloat(caller.ox_offset);
                caller.oy=parseFloat(caller.oy)+parseFloat(caller.oy_offset);

                caller.scale = scale_main;
            }

            if (surface == 'main'){
                caller.url = caller.url_main;
            }

            if(surface == 'shared') {
                caller.url = caller.url_shared;
            }
            caller.coin = 1;
        }
        console.log("surface: ", surface)
        console.log("surface_url: ", caller.url)

    </action>

    <action name="NavigateTo" type="javascript">
        var url = caller.goto_url;
        var hlookat = caller.hlookat;
        var vlookat = caller.vlookat;
        url = url + "?hlookat=" + hlookat + "&#38;vlookat=" + vlookat;
        window.location.href = url;
    </action>

    <!-- view settings -->
    <action name="do_crop_animation" scope="local" args="framewidth, frameheight, framerate">
        <!-- define local variables -->
        calc(local.xframes, (caller.imagewidth /framewidth) BOR 0);
        calc(local.frames, xframes * ((caller.imageheight / frameheight) BOR 0));
        def(local.frame, integer, 0);

        <!-- set the first frame -->
        calc(caller.crop, '0|0|' + framewidth + '|' + frameheight);

        <!-- do the animation -->
        setinterval(calc('crop_anim_' + caller.name), calc(150.0 / framerate),
        if(caller.loaded,
        inc(frame);
        if(frame GE frames, if(caller.onlastframe !== null, callwith(caller, onlastframe() ) ); set(frame,0); );
        mod(xpos, frame, xframes);
        div(ypos, frame, xframes);
        Math.floor(ypos);
        mul(xpos, framewidth);
        mul(ypos, frameheight);
        calc(caller.crop, xpos + '|' + ypos + '|' + framewidth + '|' + frameheight);
        ,
        <!-- stop the interval when the hotspot gets removed -->
        clearinterval(calc('crop_anim_' + caller.name));
        );
        );
    </action>

    <action name="hideNav" type="javascript" scope="global">
        var hotspotArr= krpano.hotspot;
        var count=hotspotArr.count;
        console.log(count);
        var i=0;

        for (x in hotspotArr.getArray()){
            var type = hotspotArr.getItem(i).hotspot_type;
            if (type == "navigation"){
                hotspotArr.getItem(i).enabled=false;
                hotspotArr.getItem(i).alpha=0;
            }
            i++;
        }
    </action>

    <action name="addHashToNav" type="javascript" scope="local" args="hash">
        var hotspotArr = krpano.hotspot;
        var layerArr = krpano.layer;
        var count = hotspotArr.count;
        var count2 = layerArr.count;
        var i=0;

        for (x in hotspotArr.getArray()){
            var type=hotspotArr.getItem(i).hotspot_type;
            var style=hotspotArr.getItem(i).style;
            if (type=="navigation"){
                clickStr=hotspotArr.getItem(i).onclick;
                var strArr=clickStr.split("?");
                var str1Arr=strArr[0].split("/");
                var newSpotId=str1Arr[str1Arr.length-1]
                var clickStr="openurl('/share/link/"+hash+"/"+newSpotId+"?"+strArr[1];
                hotspotArr.getItem(i).onclick=clickStr;
            }
            if (style=="surface_click"){
                hotspotArr.getItem(i).enabled=false;
            }
            i++;
        }

        i=0;
        for (x in layerArr.getArray()){
            var type=layerArr.getItem(i).layer_type;
            if (type=="map_pin"){
                var clickStr=layerArr.getItem(i).onclick;
                var splitStrArr=clickStr.split("?");
                var str1Arr=splitStrArr[0].split("/");
                var newSpotId=str1Arr[str1Arr.length-1].split("'")[0]
                var clickStr="openurl('/share/link/"+hash+"/"+newSpotId+"?"+strArr[1];
                layerArr.getItem(i).onclick=clickStr;
            }
            if (style=="surface_click"){
                layerArr.getItem(i).enabled=true;
            }
            i++;
        }
    </action>


    <action name="hideEditBtn">
        set(layer['version'].visible,false);
        set(layer['guide'].visible,false);
    </action>

    <action name="hideMap">
        set(layer['main_map'].visible,false);
    </action>

    <action name="scaleMaptoScreen">
        set (layer['map_bg'].scale,%1);
    </action>

    <action name="moveLogout30">
        set(layer['logout'].x,30);
    </action>

    <action name="moveLogout120">
        set(layer['logout'].x,120);
    </action>

</krpano>
